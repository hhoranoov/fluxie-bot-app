import { sendMessage } from "./utils";

// –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∫–æ–º–∞–Ω–¥—É start
export async function sendStartMessage(chatId, message, env) {
  const firstName = message?.from?.first_name || '–¥—Ä—É–∂–µ';

  const keyboard = {
    inline_keyboard: [
      [
        { text: '‚ùì –î–æ–ø–æ–º–æ–≥–∞', callback_data: 'help' },
        { text: 'üåê –°–∞–π—Ç', url: 'https://fluxie.pp.ua' }
      ]
    ]
  };

  return sendMessage(
    chatId,
    `‚ú® –í—ñ—Ç–∞—é, *${firstName}*!  
–Ø ‚Äî *–§–ª—é–∫—Å—ñ*, —Ç–≤—ñ–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –∞—Å–∏—Å—Ç–µ–Ω—Ç. üöÄ  

–û—Å—å —â–æ —è –≤–º—ñ—é:  
üó®Ô∏è –í—ñ–¥–ø–æ–≤—ñ–¥–∞—é –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è  
üé® –ì–µ–Ω–µ—Ä—É—é –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è  
üìö –î–∞—é –∫–æ—Ä–∏—Å–Ω—ñ –ø–æ—Ä–∞–¥–∏  

–í–∏–±–µ—Ä–∏ –æ–ø—Ü—ñ—é –Ω–∏–∂—á–µ, –∞–±–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–µ–Ω—ñ —â–æ—Å—å! üëá`,
    env,
    keyboard
  );
}

// –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∫–æ–º–∞–Ω–¥—É help
export async function sendHelpMessage(chatId, env) {
  return sendMessage(chatId, '‚öôÔ∏è –í —Ä–æ–∑—Ä–æ–±—Ü—ñ..', env);
}

// –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∫–æ–º–∞–Ω–¥—É settings
export async function sendSettingMessage(chatId, env) {
  return sendMessage(chatId, '‚öôÔ∏è –í —Ä–æ–∑—Ä–æ–±—Ü—ñ..', env)
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ —Å—Ç—ñ–∫–µ—Ä–∞
export async function sendIdMessage(message, env) {
  const chatId = message.chat.id;
  const userId = message?.from?.id;

  if (message.reply_to_message && message.reply_to_message.sticker) {
    const stickerId = message.reply_to_message.sticker.file_id;
    return sendMessage(chatId, `üé≠ ID —Ü—å–æ–≥–æ —Å—Ç—ñ–∫–µ—Ä–∞:\n\`${stickerId}\``, env);
  }

  return sendMessage(chatId, `üÜî –í–∞—à ID: \`${userId}\``, env);
}
